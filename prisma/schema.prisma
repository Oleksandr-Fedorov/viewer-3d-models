// prisma/schema.prisma
datasource db {
  provider  = "postgresql"
  url  	    = env("DATABASE_URL")
  // uncomment next line if you use Prisma <5.10
  // directUrl = env("DATABASE_URL_UNPOOLED")
}

generator client{
  provider = "prisma-client-js"
}

enum UserRole{
  ADMIN
  USER
}


//model
model ThreeDModel {
  id         String       @id 
  name       String
  format     String
  storageURL String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userViews  UserModels[] // Связь с таблицей UserModels
}

model UserModels {
  userId  String
  modelId String
  image      String?
  viewedAt DateTime @default(now()) @updatedAt
  
  user    User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  model   ThreeDModel @relation(fields: [modelId], references: [id], onDelete: Cascade)
  
  @@id([userId, modelId])
}

model User {
  id            String          @id @default(cuid())
  name          String?
  email         String          @unique
  emailVerified DateTime?
  image         String?
  password      String?
  role          UserRole        @default(USER)
  accounts      Account[]
  userHist      UserModels[]
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
 
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@id([provider, providerAccountId])
}